// Generated by CoffeeScript 1.7.1
$(function() {
  var APIModules, addComposers, addInitialVideosByLanguage, addMixes, addPlayer, addShareText, addVideoTitles, additionalVideoObject, brightcoveVideos, changeAdditionalVideo, changeVideo, colorFlag, composerObject, converter, currentCountry, currentVideoCallback, detectMobile, findLocation, getData, getHeight, init, initCount, isMobile, magazineObject, mixObject, modVP, onMediaEventFired, onPlayerReady2, player, player2, playerData, playerIDS, playerTemplate, prepInit, removeSpinner, resizePlayer, resizeVid, sendHeight, setupBinds, setupYouTube, swapVideo, targetVideo, updateInitPlayerData, vidRatio, videoObject;
  composerObject = {};
  videoObject = {};
  mixObject = {};
  additionalVideoObject = {};
  magazineObject = {};
  player2 = {};
  initCount = 0;
  converter = new Showdown.converter();
  player = {};
  APIModules = {};
  modVP = {};
  vidRatio = 640 / 360;
  targetVideo = {};
  playerTemplate = "";
  currentCountry = "";
  colorFlag = 0;
  brightcoveVideos = [];
  isMobile = false;
  playerData = {};
  playerIDS = {
    "spanish": "3765246987001",
    "german": "3763075412001",
    "french": "3763075412001",
    "polish": "3763075412001",
    "italian": "3763075412001",
    "japanese": "3765303978001",
    "brazilian": "3763075412001",
    "turkish": "3765246989001",
    "default": "3763075412001"
  };
  init = function() {
    setupBinds();
    addPlayer();
    $('.video-nav ul a.episode li').first().addClass("active");
    $('.story-nav ul a.additional-episode li').first().addClass("active");
    return sendHeight(getHeight());
  };
  prepInit = function(count) {
    initCount = initCount + count;
    if (initCount === 6) {
      removeSpinner();
      init();
      return initCount = 0;
    }
  };
  findLocation = function() {
    return $.ajax('http://freegeoip.net/json/', {
      type: 'GET',
      dataType: 'json',
      timeout: 3000,
      error: function(jqXHR, textStatus, errorThrown) {
        console.log("" + textStatus);
        currentCountry = "default";
        getData();
        return addInitialVideosByLanguage(currentCountry);
      },
      success: function(data, textStatus, jqXHR) {
        currentCountry = data.country_name;
        console.log("Country: " + currentCountry);
        currentCountry = currentCountry.toLowerCase();
        getData();
        return addInitialVideosByLanguage(data.country_name);
      }
    });
  };
  addInitialVideosByLanguage = function(country) {
    country = country.toLowerCase();
    switch (country) {
      case "germany":
        return updateInitPlayerData(playerIDS.german, country);
      case "austria":
        return updateInitPlayerData(playerIDS.german, country);
      case "spain":
        return updateInitPlayerData(playerIDS.spanish, country);
      case "mexico":
        return updateInitPlayerData(playerIDS.spanish, country);
      case "argentina":
        return updateInitPlayerData(playerIDS.spanish, country);
      case "colombia":
        return updateInitPlayerData(playerIDS.spanish, country);
      case "chile":
        return updateInitPlayerData(playerIDS.spanish, country);
      case "japan":
        return updateInitPlayerData(playerIDS.japanese, country);
      case "poland":
        return updateInitPlayerData(playerIDS.polish, country);
      case "turkey":
        return updateInitPlayerData(playerIDS.turkish, country);
      case "italy":
        return updateInitPlayerData(playerIDS.italian, country);
      case "france":
        return updateInitPlayerData(playerIDS.french, country);
      case "brazil":
        return updateInitPlayerData(playerIDS.brazilian, country);
      default:
        return updateInitPlayerData(playerIDS["default"]);
    }
  };
  updateInitPlayerData = function(videoId, country) {
    playerData = {
      "playerID": "1890493041001",
      "playerKey": "AQ~~%2CAAABuJ3Komk~%2CgXybzBdQzgLgC0zHvAZXtMeryIVplW-t",
      "width": ($(window).width()) / 1.5,
      "height": (($(window).width()) / 1.5) / vidRatio,
      "videoID": "" + videoId
    };
    playerTemplate = "<div style=\"display:none\"></div><object id=\"myExperience\" class=\"BrightcoveExperience\"><param name=\"bgcolor\" value=\"#FFFFFF\" /><param name=\"width\" value=\"{{width}}\" /><param name=\"height\" value=\"{{height}}\" /><param name=\"playerID\" value=\"{{playerID}}\" /><param name=\"playerKey\" value=\"{{playerKey}}\" /><param name=\"isSlim\" value=\"true\" /><param name=\"autoStart\" value=\"false\" /><param name=\"isVid\" value=\"true\" /><param name=\"isUI\" value=\"true\" /><param name=\"dynamicStreaming\" value=\"true\" /><param name=\"@videoPlayer\" value=\"{{videoID}}\"; /><param name=\"includeAPI\" value=\"true\" /><param name=\"linkBaseURL\" value=\"http://www.redbullmusicacademy.com/magazine/diggin-in-the-carts\"/><param name=\"templateLoadHandler\" value=\"onTemplateLoad\" /><param name=\"templateReadyHandler\" value=\"onTemplateReady\" /></object>";
    currentCountry = country.toLowerCase();
    return init();
  };
  sendHeight = function(height) {
    var message, messageJSON;
    message = {
      height: height
    };
    messageJSON = JSON.stringify(message);
    return window.parent.postMessage(messageJSON, '*');
  };
  getHeight = function() {
    return $(document.body).height();
  };
  window.onTemplateLoad = function(experienceID) {
    player = brightcove.api.getExperience(experienceID);
    APIModules = brightcove.api.modules.APIModules;
    return modVP = player.getModule(brightcove.api.modules.APIModules.VIDEO_PLAYER);
  };
  window.onTemplateReady = function(evt) {
    resizePlayer($('#myExperience'));
    modVP.addEventListener(brightcove.api.events.MediaEvent.BEGIN, onMediaEventFired);
    modVP.addEventListener(brightcove.api.events.MediaEvent.CHANGE, onMediaEventFired);
    modVP.addEventListener(brightcove.api.events.MediaEvent.COMPLETE, onMediaEventFired);
    modVP.addEventListener(brightcove.api.events.MediaEvent.ERROR, onMediaEventFired);
    modVP.addEventListener(brightcove.api.events.MediaEvent.PLAY, onMediaEventFired);
    modVP.addEventListener(brightcove.api.events.MediaEvent.STOP, onMediaEventFired);
    return sendHeight(getHeight());
  };
  swapVideo = function(order) {
    return modVP.getCurrentVideo(currentVideoCallback);
  };
  currentVideoCallback = function(currentVideo, order) {
    switch (currentCountry) {
      case "germany":
        modVP.loadVideoByID(targetVideo.fields.brightcoveVideoIdGerman);
        break;
      case "austria":
        modVP.loadVideoByID(targetVideo.fields.brightcoveVideoIdGerman);
        break;
      case "france":
        modVP.loadVideoByID(targetVideo.fields.brightcoveVideoIdFrench);
        break;
      case "japan":
        modVP.loadVideoByID(targetVideo.fields.brightcoveVideoIdJapanese);
        break;
      case "turkey":
        modVP.loadVideoByID(targetVideo.fields.brightcoveVideoIdTurkish);
        break;
      case "brazil":
        modVP.loadVideoByID(targetVideo.fields.brightVideoIdBrazil);
        break;
      case "italy":
        modVP.loadVideoByID(targetVideo.fields.brightcoveVideoIdItalian);
        break;
      case "spain":
        modVP.loadVideoByID(targetVideo.fields.brightcoveVideoIdSpanish);
        break;
      case "mexico":
        modVP.loadVideoByID(targetVideo.fields.brightcoveVideoIdSpanish);
        break;
      case "argentina":
        modVP.loadVideoByID(targetVideo.fields.brightcoveVideoIdSpanish);
        break;
      case "colombia":
        modVP.loadVideoByID(targetVideo.fields.brightcoveVideoIdSpanish);
        break;
      case "chile":
        modVP.loadVideoByID(targetVideo.fields.brightcoveVideoIdSpanish);
        break;
      default:
        modVP.loadVideoByID(targetVideo.fields.brightcoveVideoId);
    }
    return $('.videos h1').empty().text(targetVideo.fields.episodeTitle);
  };
  onMediaEventFired = function(evt) {};
  resizePlayer = function(video) {
    var diff, margin, newSrc, ogHeight, ogWidth, ratio, regex, src, vid, vidWidth, winWidth;
    vid = video;
    ogWidth = vid.attr("width");
    ogHeight = vid.attr("height");
    winWidth = $(window).width();
    ratio = ogWidth / ogHeight;
    if (isMobile) {
      if (vid.attr("src")) {
        src = vid.attr("src");
        regex = /width=([\d\.]*).*height=([\d\.]*)/;
        newSrc = src.replace(regex, '');
        vid.attr("src", newSrc);
      }
    } else {
      vidWidth = winWidth / 1.6;
      vid.attr("width", vidWidth);
      vid.attr("height", vidWidth / ratio);
      diff = winWidth - vidWidth;
      margin = diff / 2;
      return vid.css({
        marginLeft: margin,
        marginRight: margin,
        opacity: 1
      });
    }
  };
  addPlayer = function() {
    var playerHTML, template;
    template = Handlebars.compile(playerTemplate);
    playerHTML = template(playerData);
    document.getElementById('player').innerHTML = playerHTML;
    return brightcove.createExperiences();
  };
  setupYouTube = function() {
    var firstScriptTag, tag;
    tag = document.createElement('script');
    tag.src = "https://www.youtube.com/iframe_api";
    firstScriptTag = document.getElementsByTagName('script')[0];
    return firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);
  };
  window.onYouTubeIframeAPIReady = function() {
    return player2 = new YT.Player('storyplayer', {
      height: '39',
      width: '64',
      videoId: 'VsbG4pXrhr8',
      events: {
        "onReady": onPlayerReady2
      },
      playerVars: {
        modestbranding: true,
        controls: 1,
        showinfo: 0,
        hd: 1,
        origin: "http://www.redbullmusicacademy.com"
      }
    });
  };
  onPlayerReady2 = function(event) {
    return resizeVid('#storyplayer');
  };
  setupBinds = function() {
    window.addEventListener('resize', function() {
      resizeVid($('#myExperience'));
      return resizeVid($('#storyplayer'));
    });
    $('a.arrow-right').click(function(event) {
      var composers, currentPos, currentSlide, nextSlide, totalComposers;
      event.preventDefault();
      composers = $('.composers-wrap');
      totalComposers = composers.find('.slide').length;
      currentSlide = composers.find('.active');
      currentPos = currentSlide.data('order');
      if (currentPos <= totalComposers - 2) {
        nextSlide = composers.find("[data-order=" + (currentPos + 1) + "]");
        currentSlide.removeClass('active');
        return nextSlide.addClass('active');
      } else {
        nextSlide = composers.find("[data-order=0]");
        currentSlide.removeClass('active');
        return nextSlide.addClass('active');
      }
    });
    $('a.arrow-left').click(function(event) {
      var composers, currentPos, currentSlide, nextSlide, totalComposers;
      event.preventDefault();
      composers = $('.composers-wrap');
      totalComposers = composers.find('.slide').length;
      currentSlide = composers.find('.active');
      currentPos = currentSlide.data('order');
      if (currentPos >= 1) {
        nextSlide = composers.find("[data-order=" + (currentPos - 1) + "]");
        currentSlide.removeClass('active');
        return nextSlide.addClass('active');
      } else {
        nextSlide = composers.find("[data-order=" + (totalComposers - 1) + "]");
        currentSlide.removeClass('active');
        return nextSlide.addClass('active');
      }
    });
    return $('a.episode').click(function(event) {
      if ($(this).children('li').hasClass("unreleased")) {

      } else {
        return swapVideo();
      }
    });
  };
  changeVideo = function(element, order, videoObject) {
    var video;
    video = videoObject[order].fields;
    if (element.find('li').hasClass("unreleased")) {
      $('.videos h1').empty().text(video.episodeTitle);
    } else {
      player1.cueVideoById(video.ytVideoId);
      return $('.videos h1').empty().text(video.episodeTitle);
    }
  };
  changeAdditionalVideo = function(order, additionalVideoObject) {
    var video;
    video = additionalVideoObject[order].fields;
    player2.cueVideoById(video.additionalYouTube);
    $('.stories h1').empty().text(video.additionalVideoTitle);
    if (currentCountry === "japan") {
      $('.stories p.body').empty().text(video.japaneseDescription);
    } else {
      $('.stories p.body').empty().text(video.description);
    }
    return $('.stories p.body').slideDown();
  };
  addVideoTitles = function(object, target, type) {
    var currentDate, episode, episodeDate, i, video, _i, _j, _len, _len1, _results, _results1;
    if (type === 'main') {
      _results = [];
      for (i = _i = 0, _len = object.length; _i < _len; i = ++_i) {
        video = object[i];
        episode = video.fields.episodeNumber;
        currentDate = new Date();
        if (currentCountry === "japan") {
          episodeDate = new Date(video.fields.datetimeOfLaunchJapan);
        } else {
          episodeDate = new Date(video.fields.datetimeOfLaunch);
        }
        if (moment() < episodeDate) {
          target.append("<a class='episode' href data-order=" + i + "><li class='unreleased' data-release='" + episodeDate + "'>" + episode + "</li>");
        } else {
          target.append("<a class='episode' href data-order=" + i + "><li class='released'>" + episode + "</li>");
        }
        _results.push(target.find('li').each(function() {
          var d, ogText, releaseDate, t;
          t = $(this);
          if (t.hasClass('unreleased')) {
            ogText = t.text();
            releaseDate = t.data('release');
            d = new Date(releaseDate);
            t.bind('mouseenter', function() {
              return t.empty().text(moment(releaseDate).format('ddd, MMM Do'));
            });
            return t.bind('mouseleave', function() {});
          }
        }));
      }
      return _results;
    } else if (type === 'additional') {
      _results1 = [];
      for (i = _j = 0, _len1 = object.length; _j < _len1; i = ++_j) {
        video = object[i];
        episode = video.fields.additionalVideoTitle;
        _results1.push(target.append("<a class='additional-episode' href data-order=" + i + "><li>" + episode + "</li>"));
      }
      return _results1;
    }
  };
  addComposers = function(object) {
    var composer, composerData, i, img, name, person, textBody, _i, _len, _results;
    _results = [];
    for (i = _i = 0, _len = object.length; _i < _len; i = ++_i) {
      composer = object[i];
      person = composer.fields;
      name = person.composerName;
      img = person.image.fields.file.url;
      if (currentCountry === "japan") {
        if (person.japaneseBio) {
          textBody = converter.makeHtml(person.japaneseBio);
        } else {
          textBody = converter.makeHtml(person.bio);
        }
      } else {
        textBody = converter.makeHtml(person.bio);
      }
      composerData = "<div class='slide' data-order='" + i + "'><div class='img-wrap'><a class='arrow-left' href></a><a class='arrow-right' href></a><img src='" + img + "'/></div><h2>" + person.composerName + "</h2><p>" + textBody + "</p></div>";
      $(".composers-wrap").append(composerData);
      _results.push($('.slide').first().addClass("active"));
    }
    return _results;
  };
  addMixes = function(object) {
    var description, embed, img, mix, mixData, mixInfo, name, _i, _len, _results;
    _results = [];
    for (_i = 0, _len = object.length; _i < _len; _i++) {
      mix = object[_i];
      mixInfo = mix.fields;
      name = mixInfo.artistName;
      img = mixInfo.artistImage.fields.file.url;
      if (mixInfo.descriptions) {
        description = mixInfo.descriptions;
      } else {
        description = "";
      }
      if (mixInfo.rbmaRadioEmbedCode) {
        embed = mixInfo.rbmaRadioEmbedCode;
      } else {
        embed = '';
      }
      mixData = "<div class='show'><img src='" + img + "'/>" + embed + "<p>" + description + "</p></div>";
      _results.push($('.radio').append(mixData));
    }
    return _results;
  };
  resizeVid = function(vidPlayer) {
    var diff, margin, ogHeight, ogWidth, ratio, vidWidth, winWidth;
    player = $(vidPlayer);
    winWidth = $(window).width();
    vidWidth = winWidth / 1.6;
    ogWidth = player.attr('width');
    ogHeight = player.attr('height');
    ratio = ogWidth / ogHeight;
    if (isMobile) {
      vidWidth = winWidth / 1.4;
    }
    player.attr('width', vidWidth);
    player.attr('height', vidWidth / ratio);
    diff = winWidth - vidWidth;
    margin = diff / 2;
    player.css({
      marginLeft: margin,
      display: 'block'
    });
    return sendHeight(getHeight());
  };
  removeSpinner = function() {
    return $('.spinner').fadeOut(function() {
      return $('.spinner').remove();
    });
  };
  detectMobile = function() {
    if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {
      return isMobile = true;
    }
  };
  addShareText = function(shareText) {
    var facebookText, fb, twitter, twitterText;
    twitter = $('.twitter-share');
    fb = $('.facebook-share');
    twitterText = shareText.twitterShareText;
    facebookText = shareText.facebookShareText;
    twitter.attr("href", "http://twitter.com/intent/tweet?text=" + twitterText);
    return fb.attr("href", "https://www.facebook.com/sharer/sharer.php?u=http://www.redbullmusicacademy.com/magazine/diggin-in-the-carts&amp;t=" + facebookText);
  };
  getData = function() {
    var client;
    client = contentful.createClient({
      accessToken: '38b8dbaf503a350d5722578c6547caca484511f7c78717736ac8f576832be4b0',
      space: 's9bc5ah7p1d5'
    });
    client.entries({
      'content_type': '42CpXYSUms44OskS6wUU6I',
      'include': 1
    }).done(function(data) {
      addComposers(data);
      return prepInit(1);
    });
    client.entries({
      'content_type': '36SuQSSPR6QmWOk8CseMC6',
      'include': 1,
      'order': 'fields.order'
    }).done(function(data) {
      videoObject = data;
      prepInit(1);
      addVideoTitles(videoObject, $('.video-nav ul'), 'main');
      return $('a.episode').bind('click', function(event) {
        var order;
        event.preventDefault();
        $(this).parent().find('li').removeClass("active");
        $(this).find('li').addClass("active");
        order = $(this).data('order');
        targetVideo = videoObject[order];
        if ($(this).children('li').hasClass("unreleased")) {

        } else {
          return swapVideo();
        }
      });
    });
    client.entries({
      'content_type': '2YpXtnGW80EEGgCUsSMmCc',
      'include': 1,
      'order': 'fields.order'
    }).done(function(data) {
      prepInit(1);
      return addMixes(data);
    });
    client.entries({
      'content_type': '6fwxAcXrxK4yqyaMUiWwWY',
      'include': 1,
      'order': 'fields.order'
    }).done(function(data) {
      prepInit(1);
      additionalVideoObject = data;
      console.log(additionalVideoObject);
      addVideoTitles(additionalVideoObject, $('.story-nav ul'), 'additional');
      $('a.additional-episode').bind('click', function(event) {
        var order;
        event.preventDefault();
        $(this).parent().find('li').removeClass("active");
        $(this).find('li').addClass("active");
        order = $(this).data('order');
        return changeAdditionalVideo(order, additionalVideoObject);
      });
      return setupYouTube();
    });
    client.entries({
      'content_type': '3JB3iYStpCGYGuu24mEcQK',
      'include': 1
    }).done(function(data) {
      prepInit(1);
      if (currentCountry === "japan") {
        return $('footer p').empty().text(data[0].fields.bodyJapanese);
      } else {
        return $('footer p').empty().text(data[0].fields.body);
      }
    });
    return client.entries({
      'content_type': '5KnZeYIgc8oUo2cgssKAWK',
      'include': 1
    }).done(function(data) {
      var shareText;
      shareText = data[0].fields;
      prepInit(1);
      return addShareText(shareText);
    });
  };
  findLocation();
  detectMobile();
  return $('.pulldown').click(function(event) {
    event.stopPropagation();
    event.preventDefault();
    console.log('click fired');
    return $(this).parent().find('ul').slideToggle(400, "linear", function() {
      return sendHeight(getHeight());
    });
  });
});
